[package]
name = "dnspx"
version = "0.9.3-dev"
edition = "2024"
license = "Apache-2.0"

[package.metadata.cargo-machete]
ignored = ["humantime-serde"]

# BINARY SIZE OPTIMIZATIONS
[profile.release]
opt-level = "z"          # Optimize for size
lto = true              # Link Time Optimization (kann 30% sparen)
codegen-units = 1       # Better optimization
panic = "abort"         # Smaller panic handler
strip = "symbols"       # Remove debug symbols
debug = false           # No debug info

# Alternative small profile for even smaller binaries
[profile.release-small]
inherits = "release"
opt-level = "z"
lto = "fat"             # More aggressive LTO
codegen-units = 1
panic = "abort"
strip = "symbols"
debug = false

[dependencies]
# Async Runtime
tokio = { version = "0.9.3-dev"] }
tokio-util = "0.7"

# Configuration & Serialization
serde = { version = "0.9.3-dev"] }
serde_json = "1.0"
regex = "1.10"

# DNS Protocol
hickory-proto = { version = "0.9.3-dev"], default-features = false }

# Logging & Tracing
tracing = "0.1"
tracing-subscriber = { version = "0.9.3-dev"], default-features = false }
# Added: "ansi" feature für pretty() method

# CLI & Error Handling
clap = { version = "0.9.3-dev"], default-features = false }
thiserror = "2.0"
inquire = "0.7"
atty = "0.2"

# Caching
moka = { version = "0.9.3-dev"], default-features = false }

# File Watching & Networking
notify = "8.0"
reqwest = { version = "0.9.3-dev"], default-features = false }
url = { version = "0.9.3-dev"] }
ipnetwork = { version = "0.9.3-dev"] }

# AWS Integration
aws-config = { version = "0.9.3-dev"], default-features = false }
aws-sdk-sts = { version = "0.9.3-dev", default-features = false }
aws-sdk-ec2 = { version = "0.9.3-dev", default-features = false }
aws-credential-types = "1.2"
aws-sdk-apigateway = { version = "0.9.3-dev", default-features = false }
aws-sdk-rds = { version = "0.9.3-dev", default-features = false }
aws-sdk-elasticache = { version = "0.9.3-dev", default-features = false }
aws-sdk-docdb = { version = "0.9.3-dev", default-features = false }
aws-sdk-route53 = { version = "0.9.3-dev", default-features = false }
aws-sdk-route53resolver = { version = "0.9.3-dev", default-features = false }

# Terminal & UI
supports-color = "3.0"
colored = "3.0"
ratatui = { version = "0.9.3-dev"], default-features = false }
crossterm = "0.29.0"

# Other dependencies
humantime-serde = "1.1.1"
async-trait = "0.1.88"
chrono = { version = "0.9.3-dev"] }
toml = "0.8.22"
rand = "0.9.1"
anyhow = "1.0.98"
dirs = "6.0.0"
futures = "0.3.31"
pulldown-cmark = "0.13.0"
base64 = "0.22"
jsonwebtoken = "9.2"

# Auto-update functionality
self_update = { version = "0.9.3-dev"], default-features = false }
semver = { version = "0.9.3-dev"] }
tar = "0.4"
flate2 = "1.0"
zip = "2.1"
sha2 = "0.10"

# Windows-specific dependencies
[target.'cfg(windows)'.dependencies]
sspi = "0.15.9"
picky-asn1 = "0.10"

[dev-dependencies]
tokio-test = "0.4"
assert_matches = "1.5"
async-std = { version = "0.9.3-dev"] }
httpmock = "0.7.0"
urlencoding = "2.1.3"
tempfile = "3.20.0"
mockall = "0.13.1"

# FEATURE FLAGS für conditional compilation
[features]
default = ["aws", "tui"]
aws = []               # AWS integration
tui = []               # Terminal UI
minimal = []           # Minimal build without AWS/TUI
